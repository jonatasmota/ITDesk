@model DBProgrammingClass_3.Models.Customer

<link rel="stylesheet" href="~/Content/styles.css" />

<div class="row header">
    <div class="col-md-12">
        <h2>Add/Edit Customer</h2>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
        @TempData["ErrorMessage"]
    </div>
}

<br />

@using (Html.BeginForm("EditCustomer", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <form class="customer-style">
            @Html.HiddenFor(c => c.State1)
            @Html.HiddenFor(c => c.CustomerID)
            @Html.HiddenFor(c => c.Inactive)
            @Html.HiddenFor(c => c.Incidents)
            @Html.HiddenFor(c => c.Registrations)

            <div class="form-group">
                @Html.LabelFor(c => c.Name, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.Name, new { @class = "form-control", placeholder = "Name" })
                @Html.ValidationMessageFor(c => c.Name)
            </div>

            <div class="form-group ">
                @Html.LabelFor(c => c.Address, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.Address, new { @class = "form-control", placeholder = "Address" })
                @Html.ValidationMessageFor(c => c.Address)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.City, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.City, new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(c => c.City)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.State, new { @class = "control-label" })
                @*@Html.DropDownListFor(c => c.State, new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.States, "StateCode", "StateName"),
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.State)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.ZipCode, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.ZipCode, new { @class = "form-control", placeholder = "ZipCode" })
                @Html.ValidationMessageFor(c => c.ZipCode)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Phone, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.Phone, new { @class = "form-control", placeholder = "Phone" })
                @Html.ValidationMessageFor(c => c.Phone)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Email, new { @class = "control-label" })
                @Html.TextBoxFor(c => c.Email, new { @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(c => c.Email)
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Update" />
                <a class="btn btn-danger" href="javascript:history.back()">Return</a>
            </div>
        </form>
    </div>
}

